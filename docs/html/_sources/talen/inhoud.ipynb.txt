{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Grondslagen\n",
    "\n",
    "Twee delen:\n",
    "\n",
    "* eerst \"unplugged\"\n",
    "* dan combineren met programmeerkennis\n",
    "    * hiervoor kunnen we mogelijk Notebooks gebruiken?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Informatie en data\n",
    "\n",
    "### Informatie: vorm en betekenis\n",
    "\n",
    "Informatie bestaat uit twee delen:\n",
    "\n",
    "* vorm\n",
    "* manier om deze vorm betekenis te geven (\"interpreteren\")\n",
    "\n",
    "Vorm is (uiteindelijk) fysiek; heeft een fysieke drager nodig.\n",
    "\n",
    "Informatie gaat verloren:\n",
    "\n",
    "* als de vorm (of de fysieke drager daarvan) verloren gaat; \n",
    "    * (bijv.: overschrijven van de bits; of verbranden van de USB-stick).\n",
    "* als de manier om de vorm te interpreteren verloren gaat\n",
    "    * bijv.: apparaat om drager te lezen\n",
    "    * of: software om data-formaat te lezen\n",
    "    * ook klassiek: vgl. vormen die we in de archeologie vinden.\n",
    "\n",
    "Je kunt vormen onbeperkt kopiëren - zonder verlies aan informatie.\n",
    "\n",
    "Informatie heeft geen *behoudswet*, zoals energie of materie.\n",
    "Dit betekent:\n",
    "\n",
    "* informatie kan verloren gaan;\n",
    "    * \"rekenen\" is zelfs een proces waarbij informatie verloren gaat.\n",
    "* er kan informatie bij komen...\n",
    "\n",
    "#### Getallen\n",
    "\n",
    "* verschil tussen *getal* (als abstract, wiskundig begrip) en de *vorm*.\n",
    "* eenzelfde getal kun je op verschillende manieren voorstellen.\n",
    "* verandert niets aan de (wiskundige) eigenschappen van het getal\n",
    "    * bijv.: even/oneven; welke priemfactoren; enz.\n",
    "* sommige vormen zijn handiger om mee te rekenen dan andere\n",
    "    * bijv.: decimale notatie vs. latijnse notatie (representatie)\n",
    "* sommige vormen zijn voor computers handiger om mee te rekenen;\n",
    "    * andere voor mensen\n",
    "    * bijv.: decimale vs. binaire notatie; hex. notatie (als compromis?)\n",
    "\n",
    "(Opm.: het is strikt genomen niet terecht om te spreken over \"binaire getallen\":\n",
    "\"binair\" slaat op de vorm/notatie, niet op het getal.)\n",
    "\n",
    "Je kunt eenzelfde persoon ook verschillende namen geven;\n",
    "verandert niets aan de eigenschappen van die persoon.\n",
    "\n",
    "Dit betekent overigens niet dat die verschillende namen (vormen) gelijkwaardig zijn.\n",
    "\n",
    "### Universele vormen\n",
    "\n",
    "* DNA; hersenen\n",
    "* taal (gesproken taal; geluid als drager)\n",
    "* geschreven taal; alfabet (symbolen; vgl. letters en teken-schrift - Chinees)\n",
    "* bits\n",
    "\n",
    "### Transformeren: omzetten van vormen\n",
    "\n",
    "* interpreteren? (bijv. draaiorgel? afdrukken van een document?)\n",
    "* \"omrekenen\"\n",
    "* richting bij transformatie? zelfde, hoger of lager *semantisch niveau*?\n",
    "* vgl. ook: interpreteren van sensordata; herkennen van patronen; en betekenis geven aan patronen.\n",
    "\n",
    "> Opmerkingen over patroonherkenning bij mensen; en \"op hol geslagen patroonherkenning\", bijv. bij paranoia; complotdenken; gebruik van framing bij patroonherkenning en interpretatie.\n",
    "\n",
    "### Handige vormen\n",
    "\n",
    "* sommige vormen zijn handiger in het gebruik (of voor een bepaald doel) dan andere.\n",
    "* vb: decimale representatie van getallen \n",
    "\n",
    "### Vormen in de informatica\n",
    "\n",
    "* basisvormen: booleans; getallen; (letter)tekens en strings\n",
    "* samenstellingen -> Datastructuren\n",
    "\n",
    "### Informatietechnologie\n",
    "\n",
    "* menselijke samenleving draait om *informatietechnologie*\n",
    "    * ontwikkeling van informatietechnologie heeft grote invloed op de geschiedenis.\n",
    "* schrift\n",
    "* boekdrukkunst\n",
    "* telefoon, telegraaf\n",
    "* radio, televisie\n",
    "* grammofoon\n",
    "* fax, fotokopieermachine\n",
    "* computer\n",
    "* encryptie, geheimschrift (en het ontsleutelen daarvan)\n",
    "\n",
    "NB: veel informatietechnologie (en de bijbehorende processen) berusten op het *reproduceren* van een vorm, al dan niet op afstand.\n",
    "Dit is eigenlijk \"datatechnologie\". \n",
    "De interpretatie wordt helemaal gedaan door mensen.\n",
    "De betekenis van de vorm speelt in deze processen geen rol.\n",
    "\n",
    "### Redundante vormen\n",
    "\n",
    "* voordeel: bestand tegen beschadiging van delen van de vorm: reconstrueren van de oorspronkelijke vorm.\n",
    "* nadeel: veranderingen van delen van een redundante vorm leiden tot inconsistenties (zie databases).\n",
    "\n",
    "### Typering in programmeertalen\n",
    "\n",
    "* hoe weet je of je een reeks bits moet opvatten als \n",
    "* ook: typering van documenten: bijv. doc vs. xsl (gebruik van suffix)\n",
    "* \n",
    "\n",
    "### Opmerkingen\n",
    "\n",
    "* interpretatie gaat zo automatisch dat we ons er niet meer van bewust zijn;\n",
    "* dit is ook een bron van misverstanden: omdat de interpretaties niet altijd zo eenduidig is.\n",
    "* verschil met de fysische wereld: de vorm van een fiets is niet vrij, geen kwestie van afspraak.\n",
    "* analoge vs. discrete vormen (ook in de biologie worden deze laatste veel gebruikt!)\n",
    "\n",
    "> Meestal beschouwen we interpretatie als iets dat betekenis op een hoger niveau oplevert.\n",
    "Maar hoe begrijp je dan bijv. het interpreteren van een orgelboek door een draaiorgel?\n",
    "\n",
    "### Opdrachten\n",
    "\n",
    "#### Voorbeelden van vormen en hun interpretatie\n",
    "\n",
    "* vormen met verschillende interpretaties (ambiguïteit; en hoe deze op te lossen) - gebruik van de context.\n",
    "* \n",
    "\n",
    "#### Voorbeelden van informatietechnologie\n",
    "\n",
    "* uit het pre-computer-tijdperk\n",
    "* nb: er zijn ook heel veel \"kleine\" uitvindingen op dit gebied gedaan; zoals bijv. de ontwikkeling (uitvinding?) van het cursieve schrift; de ontwikkeling van \"alfabetisch geordende lijsten\" (en het zoeken daarin) - bijv. voor namenlijsten, woordenlijsten.; de uitvinding van de postzegel.\n",
    "* \n",
    "\n",
    "#### Andere getalrepresentaties (binair, hex)\n",
    "\n",
    "* omrekenen van decimaal naar binair (en omgekeerd)\n",
    "* van binair naar hexadecimaal (en omgekeerd)\n",
    "* gebruik van hex-getallen: bijv. MAC-adres\n",
    "    * dit zijn gee getallen om mee te rekenen: je gebruikt daar een getal als identificatie. Het heeft geen zin om IP-adressen in priemfactoren te ontbinden.\n",
    "\n",
    "#### Lettertekens\n",
    "\n",
    "* getal (bitreeks) <-> letterteken\n",
    "* hoe weet je of je een bitreeks als getal of als letterteken moet opvatten? -> *typering* in programmeertalen. (en in databases; spreadsheets; \n",
    "* \n",
    "\n",
    "#### Pixels\n",
    "\n",
    "* pixel als universele vorm: je kunt er elk mogelijk beeld mee maken (als je voldoende pixels hebt).\n",
    "* cf. discrete karakter van receptoren in het oog.\n",
    "* later: rekenen met pixels... (e.g. cellulaire automaten)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Betekenis (representatie en interpretatie) in lagen\n",
    "\n",
    "* \"betekenis\" op 1 niveau kan de vorm zijn met een betekenis op een hoger niveau \n",
    "* vaak groot aantal niveaus van vorm en betekenis\n",
    "* \"semantische ladder\"\n",
    "* voorbeelden uit het dagelijks leven?\n",
    "* voorbeelden uit de ICT:\n",
    "    * \"protocolstack\" bij communicatie.\n",
    "    * verschillende soorten figuren: pixels vs. pdf; pdf vs. word-doc.\n",
    "* van betekenis naar vorm: \"eenvoudig\", ook voor computers\n",
    "* van vorm naar betekenis: \"moeilijk tot zeer moeilijk\"; zeker voor computers\n",
    "    * vgl. van word-doc naar PDF en van PDF naar word-doc.\n",
    "    * bij overgang van betekenis naar vorm gaat *informatie verloren*\n",
    "    * vgl. ook het html-gebruik van \"em(phasize)\" vs. \" (semantische attributen?)\n",
    "    * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em\n",
    "    \n",
    "> Opmerking over *transformeren*?    \n",
    "    \n",
    "### Opdrachten\n",
    "\n",
    "* Maak een Word-doc; druk dit af; scan dit in; en probeer er weer een Word-document van te maken. Ga na wat de verschillen zijn met het oorspronkelijke document.\n",
    "    * NB: dit werkt nog beter met een HTML-document, maar leerlingen hebben daar in dit stadium nog geen kennis van?\n",
    "    * Nog een suggestie: gebruik van *styles* in Word, bijvoorbeeld voor \"exercise\"-tekst?\n",
    "    * Je hebt hiervoor een programma nodig dat pixels om kan zetten in tekst; vb?\n",
    "    * https://pdf2doc.com/nl/\n",
    "    * https://www.pdfonline.com/pdf-to-word-converter/\n",
    "* Idem voor een figuur, getekend met een vector-graphics programma."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Opslaan en terugzoeken"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Communicatie"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Algoritmen (rekenen; \"dataverwerking\")\n",
    "\n",
    "* basisbegrippen (zie inl. programmeren)\n",
    "* rekenen als \"schuiven met vormen\"\n",
    "    * bij het rekenen gebruik je de vorm, niet de interpretatie als getal\n",
    "\n",
    "### Cellulaire automaten\n",
    "\n",
    "* (deze geven een goed voorbeeld van het rekenen met vormen, zonder dat je enige betekenis aan de vormen geeft.)\n",
    "\n",
    "### Voorbeeld: zoeken\n",
    "\n",
    "* lineair zoeken (\"linear search\")\n",
    "* binair zoeken (\"binary search\")\n",
    "* voorbeeld: raad een getal onder de 100\n",
    "* voorbeeld: zoeken in een rij getallen (of records)\n",
    "* complexiteit (efficiëntie): aantal stappen als functie van het aantal elementen (\"de grootte van het probleem\")\n",
    "\n",
    "### Opmerkingen\n",
    "\n",
    "* dit kunnen we (als proces) misschien beter \"communiceren\" noemen, als werkwoord."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Eindige automaten\n",
    "\n",
    "* eindige automaat als voorbeeld van algoritme\n",
    "* eindige automaat voor herkennen en voor genereren\n",
    "* verband met Markov ketens\n",
    "* het web als \"eindige automaat\": pagina als toestand en link als toestandsovergang\n",
    "* Google's algoritme (pagerank) en Markov chains."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Datastructuren en algoritmen\n",
    "\n",
    "* samenhang tussen structuur van data en structuur van programma dat deze data *verwerkt*\n",
    "* \n",
    "\n",
    "### Records, cartesisch product\n",
    "\n",
    "(soms ook tupel)\n",
    "\n",
    "* verwerking: opeenvolging\n",
    "\n",
    "### Rijen (arrays)\n",
    "\n",
    "* verwerking: herhaling (in het bijzonder: for, for all)\n",
    "\n",
    "### Data in tabellen\n",
    "\n",
    "* verwerking:\n",
    "* vgl. ook databases, spreadsheets\n",
    "\n",
    "### Bomen\n",
    "\n",
    "* verwerking: recursie\n",
    "\n",
    "### Abstracte datatypes\n",
    "\n",
    "* verzamelingen e.d.\n",
    "* combinatie van waarden en operaties op deze waarden.\n",
    "* vgl. ook functie als abstractie van een berekening.\n",
    "\n",
    "### Opmerkingen\n",
    "\n",
    "* voorbeelden die we kunnen behandelen voordat we met programmeren beginnen:\n",
    "    * bomen (inclusief recursie); verschillende soorten\n",
    "    * data in tabellen: vgl. spreadsheets.\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Talen en grammatica's\n",
    "\n",
    "Taal (zin in een taal) heeft *structuur*.\n",
    "Dit geldt voor natuurlijke talen en programmeertalen.\n",
    "Deze structuur wordt gegeven door de syntax (grammatica).\n",
    "Deze structuur hangt nauw samen met de betekenis.\n",
    "\n",
    "### Syntaxdiagrammen\n",
    "\n",
    "* een syntaxdiagram beschrijft een taal - alle zinnen in die taal, en de structuur van deze zinnen;\n",
    "* vb: eenvoudige \"natuurlijke\" taal, subset van Nederlands\n",
    "* vb: eenvoudige programmeertaal\n",
    "\n",
    "* tekenen van syntaxdiagrammen:\n",
    "    * railroad diagrams: https://github.com/tabatkins/railroad-diagrams\n",
    "    * ebnf to ps: https://github.com/FranklinChen/Ebnf2ps\n",
    "\n",
    "### Ontleedbomen\n",
    "\n",
    "* structuur van een zin gegeven in de vorm van een boom.\n",
    "* \n",
    "* tekenen van ontleedbomen (syntax trees):\n",
    "    * http://ironcreek.net/phpsyntaxtree\n",
    "    * http://www.tycho.iel.unicamp.br/phpsyntaxtree/\n",
    "    * http://mshang.ca/syntree/\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Filosofische/fundamentele/praktische vragen\n",
    "\n",
    "* wat zijn de grenzen aan rekenen?\n",
    "    * wat zijn de fundamentele grenzen? (\"onberekenbare functies\")\n",
    "    * wat zijn de praktische grenzen? (\"complexiteit\": rekenen kost teveel tijd en/of ruimte - geheugen)\n",
    "    * gebruik van (bijv.) Turing machine om over deze grenzen te redeneren\n",
    "* wat zijn de grenzen aan communicatie?\n",
    "    * hoe compact kun je een betekenis weergeven? (compressie)?\n",
    "    * hoe kun je een bericht betrouwbaar overbrengen? (gebruik van redundantie)\n",
    "    * hoe kun je een bericht veilig overbrengen of bewaren (encryptie)\n",
    "* kunnen computers denken?\n",
    "* wat is denken?\n",
    "* wat is bewustzijn?\n",
    "* wat zijn de fundamentele verschillen en overeenkomsten tussen computers (robots) en mensen?\n",
    "    * bijv. ook: Turing test\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "365.59375px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
